Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30

Dry Run:

Let's take numRows = 5 as an example.

Step 1: Initialize the triangle with the first row:
triangle = [[1]]

Step 2: Generate the second row:
- Start with [1]
- There are no middle elements since it's the second row
- End with [1]
triangle = [[1], [1, 1]]

Step 3: Generate the third row:
- Start with [1]
- Calculate the middle elements: 1 + 1 = 2
- End with [1]
triangle = [[1], [1, 1], [1, 2, 1]]

Step 4: Generate the fourth row:
- Start with [1]
- Calculate the middle elements: 1 + 2 = 3, 2 + 1 = 3
- End with [1]
triangle = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]

Step 5: Generate the fifth row:
- Start with [1]
- Calculate the middle elements: 1 + 3 = 4, 3 + 3 = 6, 3 + 1 = 4
- End with [1]
triangle = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]

Final Output:
[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]
